function initNavBar() { const e = document.querySelectorAll("#nav-menu > li"); if (e) for (let t = 0; t < e.length; t++)e[t].addEventListener("click", function (t) { const n = t.currentTarget; for (let t = 0; t < e.length; t++)e[t].classList.contains("selected") && e[t].classList.remove("selected"); n.classList.add("selected") }) } function initYeah() { function e(e) { const t = e.currentTarget, n = t.getAttribute("data-post"), o = document.getElementById(n), s = document.getElementById("count-" + n); t.disabled = !0; const i = "postID=" + n; t.classList.contains("selected") ? (t.classList.remove("selected"), o.classList.remove("yeah"), s.innerText -= 1) : (t.classList.add("selected"), o.classList.add("yeah"), s.innerText = ++s.innerText), POST("/posts/empathy", i, function (e) { const n = JSON.parse(e.response); n && 200 === n.status || Toast(1155927), t.disabled = !1, s.innerText = n.count }) } const t = document.querySelectorAll("span[data-post]"); if (t) for (let n = 0; n < t.length; n++)t[n].removeEventListener("click", e), t[n].addEventListener("click", e) } function initTabs() { function e(e) { e.preventDefault(); const n = e.currentTarget, o = n.children[0]; for (let e = 0; e < t.length; e++)t[e].classList.contains("selected") && t[e].classList.remove("selected"); n.classList.add("selected"), GET(o.getAttribute("href") + "?pjax=true", function (e) { const t = e.response; t && 200 === e.status && (document.getElementsByClassName("tab-body")[0].innerHTML = e.response, window.history.pushState({ url: o.href, title: "", scrollPos: [0, 0] }, "", o.href), initPosts(), initMorePosts()) }) } const t = document.querySelectorAll(".tab-button"); if (t) for (let n = 0; n < t.length; n++)t[n].removeEventListener("click", e), t[n].addEventListener("click", e) } function initPosts() { const e = document.querySelectorAll(".post-content[data-href]"); if (e) { for (let t = 0; t < e.length; t++)e[t].addEventListener("click", function (e) { pjax.loadUrl(e.currentTarget.getAttribute("data-href")) }); initYeah(), initSpoilers() } } function initMorePosts() { const e = document.querySelectorAll("#load-more[data-href]"); if (e) for (let t = 0; t < e.length; t++)e[t].addEventListener("click", function (e) { const t = e.currentTarget; GET(t.getAttribute("data-href"), function (e) { const n = e.response; n && 200 === e.status ? (t.parentElement.outerHTML = e.response, initPosts(), initMorePosts()) : t.parentElement.remove() }) }) } function initPostModules() { const e = document.querySelectorAll("[data-module-show]"); if (console.log(e), e) for (let t = 0; t < e.length; t++)e[t].addEventListener("click", function (e) { const t = e.currentTarget, n = t.getAttribute("data-module-show"), o = t.getAttribute("data-module-hide"), s = t.getAttribute("data-header"), i = t.getAttribute("data-menu"); n && o && (document.getElementById(o).style.display = "none", document.getElementById(n).style.display = "", document.getElementById("title").style.display = "true" === s ? "" : "none", document.getElementById("nav-menu").style.display = "true" === i ? "" : "none", initNewPost()) }) } function initPostEmotion() { const e = document.querySelectorAll("input[data-mii-face-url]"); if (e) for (let t = 0; t < e.length; t++)e[t].addEventListener("click", function (e) { const t = e.currentTarget; document.getElementById("mii-face").src = t.getAttribute("data-mii-face-url") }) } function initNewPost() { initPostEmotion() } function initSpoilers() { const e = document.querySelectorAll("button[data-post-id]"); if (e) for (let t = 0; t < e.length; t++)e[t].addEventListener("click", function (e) { const t = e.currentTarget; document.getElementById("post-" + t.getAttribute("data-post-id")).classList.remove("spoiler"), t.remove() }) } function initAll() { initNavBar(), initTabs(), initPosts(), initMorePosts(), initPostModules(), pjax.refresh() } function follow(e) { const t = e.getAttribute("data-community-id"), n = document.getElementById("followers"), o = e.innerText, s = e.getAttribute("data-text"); e.disabled = !0; const i = "id=" + t; e.classList.contains("checked") ? e.classList.remove("checked") : e.classList.add("checked"), e.setAttribute("data-text", o), e.innerText = s, POST(e.getAttribute("data-url"), i, function (t) { const o = JSON.parse(t.response); if (!o || 200 !== o.status) return Toast("Unable to follow. Please try again later."); e.disabled = !1, n.innerText = o.count }) } function checkForUpdates() { const e = new XMLHttpRequest; e.onreadystatechange = function () { if (4 === this.readyState && 200 === this.status) { const e = JSON.parse(this.responseText), t = document.getElementById("message-badge"), n = document.getElementById("news-badge"); e.message_count > 0 && e.message_count < 99 ? (t.innerHTML = e.message_count, t.style.display = "unset") : e.message_count >= 99 ? (t.innerHTML = "99+", t.style.display = "unset") : (t.innerHTML = "", t.style.display = "none"), e.notification_count > 0 && e.notification_count < 99 ? (n.innerHTML = e.notification_count, n.style.display = "unset") : e.notification_count >= 99 ? (n.innerHTML = "99+", n.style.display = "unset") : (n.innerHTML = "", n.style.display = "none") } }, e.open("GET", "/users/notifications.json", !0), e.send() } function POST(e, t, n) { const o = new XMLHttpRequest; o.onreadystatechange = function () { if (4 === this.readyState) return n(this) }, o.open("POST", e, !0), o.setRequestHeader("Content-type", "application/x-www-form-urlencoded"), o.send(t) } function GET(e, t) { const n = new XMLHttpRequest; n.onreadystatechange = function () { if (4 === this.readyState) return t(this) }, n.open("GET", e, !0), n.send() } function copyToClipboard(e) { const t = document.getElementsByTagName("header")[0].appendChild(document.createElement("input")); t.value = e, t.focus(), t.select(), document.execCommand("copy"), t.parentNode.removeChild(t), Toast("Copied to clipboard.") } function Toast(e) { const t = document.getElementById("toast"); t.innerText = e, t.className = "show", setTimeout(function () { t.className = t.className.replace("show", "") }, 3e3) } function downloadURI(e, t) { const n = document.createElement("a"); n.download = t, n.href = e, document.body.appendChild(n), n.click(), document.body.removeChild(n), delete n } function reportPost(e) { const t = e.getAttribute("data-post"), n = document.getElementById("report-launcher"), o = document.getElementById("report-form"), s = document.getElementById("report-post-id"); t && n && o && s && (o.action = "/posts/" + t + "/report", s.value = t, console.log(t.replace(/(\d{3})(\d{4})(\d{3})(\d{4})(\d{3})(\d{4})/, "$1-$2-$3-$4-$5-$6")), n.click()) } function openText() { const e = document.getElementById("new-post-text"), t = document.getElementById("new-post-memo"), n = document.getElementById("painting-wrapper"); e && t && n && (e.style.display = "", t.style.display = "none", n.style.display = "none") } function newPainting(e) { const t = document.getElementById("new-post-text"), n = document.getElementById("new-post-memo"), o = document.getElementById("painting-wrapper"), s = document.getElementById("painting"); t && n && o && (e && clearCanvas(), t.style.display = "none", n.style.display = "flex", o.style.display = "", scale = s.getBoundingClientRect().width / 320) } function closePainting(e) { const t = document.getElementById("new-post-memo"), n = document.getElementById("painting-wrapper"), o = document.getElementById("memo"), s = document.getElementById("painting"); n && t && o && (e && (o.src = s.toDataURL()), n.style.display = "none") } let pjax; setInterval(checkForUpdates, 3e4), console.debug("Document initialized:" + window.location.href), document.addEventListener("pjax:send", function () { console.debug("Event: pjax:send", arguments) }), document.addEventListener("pjax:complete", function () { console.debug("Event: pjax:complete", arguments) }), document.addEventListener("pjax:error", function (e) { Toast("Error: Unable to load element. \nPlease send the error code and what you were doing in #support"), console.debug(e) }), document.addEventListener("pjax:success", function () { console.debug("Event: pjax:success", arguments), initAll() }), document.addEventListener("DOMContentLoaded", function () { pjax = new Pjax({ elements: "a[data-pjax]", selectors: ["title", "#body"], switches: { "#nav-menu": Pjax.switches.replaceNode, ".tab-body": Pjax.switches.replaceNode } }), console.debug("Pjax initialized.", pjax), initAll() }), window.onscroll = function (e) { window.innerHeight + window.scrollY >= document.body.scrollHeight && document.getElementById("load-more") && document.getElementById("load-more").click() };
